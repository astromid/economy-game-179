"""Created all necessary tables.

Revision ID: 2b7380507a71
Revises: 819cbf6e030b
Create Date: 2022-09-03 12:30:00.000000

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "2b7380507a71"
down_revision = "819cbf6e030b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    op.create_table(  # users table (root, players, NPCs)
        "users",
        sa.Column("id", sa.Integer, autoincrement=True, primary_key=True),
        sa.Column("login", mysql.TINYTEXT, nullable=True),
        sa.Column("password", mysql.TINYTEXT, nullable=True),
        sa.Column("name", mysql.TINYTEXT, nullable=True),
    )
    op.create_table(  # game cycles table
        "cycles",
        sa.Column("cycle", sa.Integer, autoincrement=True, primary_key=True),
        sa.Column("started", sa.DateTime),
        sa.Column("finished", sa.DateTime),
    )
    op.create_table(  # markets graph table (as an adjacency list)
        "markets",
        sa.Column("id", sa.Integer, autoincrement=True, primary_key=True),
        sa.Column("name", mysql.TINYTEXT),
        sa.Column("link1", sa.Integer),
        sa.Column("link2", sa.Integer),
        sa.Column("link3", sa.Integer),
        sa.Column("link4", sa.Integer),
        sa.Column("link5", sa.Integer),
    )
    transaction_types = sa.Enum("buy", "sell", "storage_fee", name="transaction_types")
    transaction_types.create(bind)
    op.create_table(  # money transactions table
        "transactions",
        sa.Column("id", sa.Integer, autoincrement=True, nullable=False, primary_key=True),
        sa.Column("cycle", sa.Integer, sa.ForeignKey("cycles.cycle")),
        sa.Column("user_id", sa.Integer, sa.ForeignKey("users.id")),
        sa.Column("amount", sa.Float, nullable=False),
        sa.Column("type", transaction_types, nullable=False),
        sa.Column("description", mysql.TINYTEXT, nullable=True),
    )
    op.create_table(
        "balances",
        sa.Column("cycle", sa.Integer, sa.ForeignKey("cycles.cycle")),
        sa.Column("user_id", sa.Integer, sa.ForeignKey("users.id")),
        sa.PrimaryKeyConstraint("cycle", "user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    op.drop_table("users")
    op.drop_table("cycles")
    op.drop_table("markets")
    op.drop_table("transactions")
    op.drop_table("balances")
    op.drop_table("logistics_operations")
    op.drop_table("storages")
    op.drop_table("prices")
    op.drop_table("stocks")
    sa.Enum(name="transaction_types").drop(bind)
    # ### end Alembic commands ###
